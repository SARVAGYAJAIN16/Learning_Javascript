Understand about Functions in CSS.
---->                                            
 Function in JavaScript

 In JavaScript, a function is a block of reusable code that performs a specific task or set of tasks. Functions are used to organize code into modular and manageable pieces, promote code reuse, and make programs more readable.

 Function Declaration:

 Declare a function using the function keyword, followed by the function name, parameters (if any), and the function body.
 This step defines the function and specifies what code should be executed when the function is called.

function greet() {
   console.log("Hello Guys, Welcome to  JS Course ");
}

                       Function Invocation (Calling a Function):

 After declaring a function, you can invoke or call it by using its name followed by parentheses.
 If the function has parameters, provide values (arguments) for those parameters inside the parentheses.

 How to call a function
 greet();

 todo Tips :- "1st declare the function & then call it" In JavaScript, it's a good practice to declare (define) your functions before you call them. This ensures that the function is available for use when you try to call it.

                                   Function definition

 // Calling the function

                              Function Parameter:

 A function parameter is a variable that is listed as a part of a function declaration. It acts as a placeholder for a value that will be provided when the function is called. Parameters allow you to pass information into a function, making it more versatile and reusable.

 Syntax: function functionName(parameter1, parameter2, ...params) {
   // Function body
 // Code to be executed when the function is called
 }

                                    Function Argument:

 A function argument is a value that you provide when you call a function. Arguments are passed into a function to fill the parameters defined in the function declaration.

 syntax:
 functionName(argument1, argument2, ...);

                                  Function expressions
 A function expression is a way to define a function as part of an expression. It can be either named or anonymous. If it's named, it becomes a named function expression.


                                  

 Anonymous Function

 An anonymous function is a function without a name. It can be created using either a function expression or a function declaration without a specified name.


  Return Keyword

 Return Keyword: In JavaScript, the return statement is used within a function to specify the value that the function should produce or provide back to the code that called it. The return statement stops the execution of a function and sends a value back to the caller

 Syntax
 //return expression;

                IIFE - immediately invoked function expression
 An IIFE, or Immediately Invoked Function Expression, is a JavaScript function that is defined and executed immediately after its creation. It is a way to create a self-contained block of code that doesn't interfere with the surrounding code and executes immediately

 Syntax
 (function () {
  // code to be executed
 })();





           
         



