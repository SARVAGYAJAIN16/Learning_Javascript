 Explore about  DOM IN JAVASCRIPT.....

 When a web browser loads an HTML document, it parses the HTML source code and creates a tree-like structure known as the Document Object Model (DOM).
 This DOM tree represents the structure of the HTML document, with each HTML element being a node in the tree.

 This entire DOM tree is then accessible to JavaScript as an object. JavaScript can interact with this object to manipulate the content, structure, and
 style of the document dynamically. The DOM essentially serves as an interface between the HTML document and JavaScript,
 providing a way for scripts to access and modify the document's structure and content.

 The Document Object Model (DOM) is an Application Programming Interface (API). The DOM Tree is the structure of your HTML document, as represented by the DOM API.
 As stated, this API then gives us many methods and properties that we can use to manipulate the Tree, and therefore, by extension, the document.

 Here is a types of nodes in js:

 Element node:  An HTML tag, the tree building blocks.

 Text node:  In the DOM tree, text content, including new lines, spaces, and tabs, is treated as text nodes.

 Attribute node: An attribute of an element.

 Comment node: Represent comments within the HTML document.

 Processing instruction node:  A processing instruction node, such as <? xml-stylesheet â€¦ ?>.

 Document node:  A document node.

 Document type node: A document type node, such as <! DOCTYPE html>.


 DOM Properties and Methods

 DOM Properties:
// document
// getElementById(id)
// getElementsByClassName(className)
// getElementsByTagName(tagName)
// querySelector(selector)
// querySelectorAll(selector)
// innerHTML
// textContent
// style

 DOM Methods:
// createElement(tagName)
// appendChild(node)
// removeChild(node)
// addEventListener(event, function)
// removeEventListener(event, function)
// setAttribute(name, value)
